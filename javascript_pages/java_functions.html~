<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Functions, Arrays, and Operators</title>
<link href="../css/styles.css" rel="stylesheet" type="text/css" />
<script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js'></script>
<script type="text/javascript">

  
	



var messageDelay = 2000;  // How long to display status messages (in milliseconds)

// Init the form once the document is ready
$( init );


// Initialize the form

function init() {

  // Hide the form initially.
  // Make submitForm() the form's submit handler.
  // Position the form so it sits in the centre of the browser window.
  $('#contactForm').hide().submit( submitForm ).addClass( 'positioned' );
	
	
		
		
  // When the "contact" link is clicked:
  // 1. Fade the content out
  // 2. Display the form
  // 3. Move focus to the first field
  // 4. Prevent the link being followed

  $('a[href="#contactForm"]').click( function() {
    $('#container').fadeTo( 'slow', .2 );
    $('#contactForm').fadeIn( 'slow', function() {
      $('#senderName').focus();
    } )

    return false;
  } );
  
 
  // When the "Cancel" button is clicked, close the form
  $('#cancel').click( function() { 
    $('#contactForm').fadeOut();
    $('#container').fadeTo( 'slow', 1 );
  } );  

  // When the "Escape" key is pressed, close the form
  $('#contactForm').keydown( function( event ) {
    if ( event.which == 27 ) {
      $('#contactForm').fadeOut();
      $('#container').fadeTo( 'slow', 1 );
    }
  } );

}



// Submit the form via Ajax

function submitForm() {
  var contactForm = $(this);

  // Are all the fields filled in?

  if ( !$('#senderName').val() || !$('#senderEmail').val() || !$('#message').val() ) {

    // No; display a warning message and return to the form
    $('#incompleteMessage').fadeIn().delay(messageDelay).fadeOut();
    contactForm.fadeOut().delay(messageDelay).fadeIn();

  } else {

    // Yes; submit the form to the PHP script via Ajax

    $('#sendingMessage').fadeIn();
    contactForm.fadeOut();

    $.ajax( {
      url: contactForm.attr( 'action' ) + "?ajax=true",
      type: contactForm.attr( 'method' ),
      data: contactForm.serialize(),
      success: submitFinished
    } );
  }

  // Prevent the default form submission occurring
  return false;
}


// Handle the Ajax response

function submitFinished( response ) {
  response = $.trim( response );
  $('#sendingMessage').fadeOut();

  if ( response == "success" ) {

    // Form submitted successfully:
    // 1. Display the success message
    // 2. Clear the form fields
    // 3. Fade the content back in

    $('#successMessage').fadeIn().delay(messageDelay).fadeOut();
    $('#senderName').val( "" );
    $('#senderEmail').val( "" );
    $('#message').val( "" );

    $('#container').delay(messageDelay+500).fadeTo( 'slow', 1 );

  } else {

    // Form submission failed: Display the failure message,
    // then redisplay the form
    $('#failureMessage').fadeIn().delay(messageDelay).fadeOut();
    $('#contactForm').delay(messageDelay+500).fadeIn();
  }
}
 

</script>
<script type="text/javascript">

function show_alert(){alert("404 ERROR Page Unavailable");}
</script>
</head>

<body>
<div id="container">
<div id="header"></div>
<div id="nav1">

<ul>
	<li><a href="#">Home</a></li>
    <li><a href="#" onclick="show_alert()">XHTML</a></li>
    <li><a href="#">CSS</a></li>
    <li><a href="#" onclick="show_alert()">DHTML</a></li>
    <li><a href="#" onclick="show_alert()">Flash</a></li>
    <li><a href="#">JavaScript</a></li>
    <li><a href="#" onclick="show_alert()">AdvHTML</a></li>
    <li><a href="#" onclick="show_alert()">FAQ</a></li>
    <li><a href="#contactForm">Contact</a></li>
</ul>




</div>
<div id="sidebar">

<ul>
	<li><a href="#">Intro</a></li>
    <li><a href="#">Scripting</a></li>
    <li><a href="#">Basics</a></li>
    <li><a href="#">Functions, Arrays, and Operators</a></li>
    <li><a href="#">Objects and the DOM</a></li>
    <li><a href="#">Events</a></li>
    <li><a href="#">Using AJAX</a></li>
</ul>


</div>

<div id="body_content">
<h1>Functions, Arrays, and Operators</h1>

<p><strong>Arrays</strong></p>
<p>Arrays are thought of as a variable that can hold more than one value.</p>
<p>Every array you create is a child of the global Array object, so your arrays have access to a complete set of methods that enable you to easily create, access, add, remove, and perform operations on an array's values.</p>
<p>Creating an array goes something like this:</p>
<p class="code">var animalArray = [];</p>
      
<p><strong>Operators</strong> </p>
<p>Operators go between data elements to indicate how JavaScript should evaluate them. An operator indicates the process that the right side should perform on the left side.</p>

   
    <p>Math </p>
    <p class="code">2+3<br/>
   10-7<br/>
   125*5<br/>
   200/4</p>
    <p>A double operator can add and subtract 1 from a number. For example: </p>
    <p class="code">var age = 12;<br/>
    age++;<br/>
    livesLeft--;</p>
    <p><strong>Functions</strong></p>
    <p>Functions are the building blocks of your page's functionality. <br/>
    Each function performs a task, such as validating an email address, adding numbers, or moving elements onscreen.<br/>
    Functions can be written to accept items of data, called arguments, which they use in their work.</p>
    <p>For example: </p>
    <p class="code">goShopping("Borders", "Codin' for the Web");</p>
    <p>The basic format of a function:</p>
    <p class="code">function functionName(parameter1, parameter2,...parameterN) {<br/>
    //code that executes when function is called<br/>
    }</p>
</div></div>
<div id="footer">&copy;Ian Heath 2012. All Rights Reserved.</div>
</body>
</html>
