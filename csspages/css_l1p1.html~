<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>CSS Lesson 1 Page 1</title>
<link href="../css/styles.css" rel="stylesheet" type="text/css" />
<script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js'></script>
<script type="text/javascript">

  
	



var messageDelay = 2000;  // How long to display status messages (in milliseconds)

// Init the form once the document is ready
$( init );


// Initialize the form

function init() {

  // Hide the form initially.
  // Make submitForm() the form's submit handler.
  // Position the form so it sits in the centre of the browser window.
  $('#contactForm').hide().submit( submitForm ).addClass( 'positioned' );
	
	
		
		
  // When the "contact" link is clicked:
  // 1. Fade the content out
  // 2. Display the form
  // 3. Move focus to the first field
  // 4. Prevent the link being followed

  $('a[href="#contactForm"]').click( function() {
    $('#container').fadeTo( 'slow', .2 );
    $('#contactForm').fadeIn( 'slow', function() {
      $('#senderName').focus();
    } )

    return false;
  } );
  
 
  // When the "Cancel" button is clicked, close the form
  $('#cancel').click( function() { 
    $('#contactForm').fadeOut();
    $('#container').fadeTo( 'slow', 1 );
  } );  

  // When the "Escape" key is pressed, close the form
  $('#contactForm').keydown( function( event ) {
    if ( event.which == 27 ) {
      $('#contactForm').fadeOut();
      $('#container').fadeTo( 'slow', 1 );
    }
  } );

}



// Submit the form via Ajax

function submitForm() {
  var contactForm = $(this);

  // Are all the fields filled in?

  if ( !$('#senderName').val() || !$('#senderEmail').val() || !$('#message').val() ) {

    // No; display a warning message and return to the form
    $('#incompleteMessage').fadeIn().delay(messageDelay).fadeOut();
    contactForm.fadeOut().delay(messageDelay).fadeIn();

  } else {

    // Yes; submit the form to the PHP script via Ajax

    $('#sendingMessage').fadeIn();
    contactForm.fadeOut();

    $.ajax( {
      url: contactForm.attr( 'action' ) + "?ajax=true",
      type: contactForm.attr( 'method' ),
      data: contactForm.serialize(),
      success: submitFinished
    } );
  }

  // Prevent the default form submission occurring
  return false;
}


// Handle the Ajax response

function submitFinished( response ) {
  response = $.trim( response );
  $('#sendingMessage').fadeOut();

  if ( response == "success" ) {

    // Form submitted successfully:
    // 1. Display the success message
    // 2. Clear the form fields
    // 3. Fade the content back in

    $('#successMessage').fadeIn().delay(messageDelay).fadeOut();
    $('#senderName').val( "" );
    $('#senderEmail').val( "" );
    $('#message').val( "" );

    $('#container').delay(messageDelay+500).fadeTo( 'slow', 1 );

  } else {

    // Form submission failed: Display the failure message,
    // then redisplay the form
    $('#failureMessage').fadeIn().delay(messageDelay).fadeOut();
    $('#contactForm').delay(messageDelay+500).fadeIn();
  }
}
 

</script>
<script type="text/javascript">

function show_alert(){alert("404 ERROR Page Unavailable");}
</script>
</head>

<body>
<div id="container">
<div id="header"></div>

<div id="nav1">

<ul>
	<li><a href="#">Home</a></li>
    <li><a href="#" onclick="show_alert()">XHTML</a></li>
    <li><a href="#">CSS</a></li>
    <li><a href="#" onclick="show_alert()">DHTML</a></li>
    <li><a href="#" onclick="show_alert()">Flash</a></li>
    <li><a href="#">JavaScript</a></li>
    <li><a href="#" onclick="show_alert()">AdvHTML</a></li>
    <li><a href="#" onclick="show_alert()">FAQ</a></li>
    <li><a href="#contactForm">Contact</a></li>
</ul>




</div>

<div id="sidebar">

<div id="nav2">

<ul>
      	<li><a href="#">Overview</a></li>
        <li><a href="#">Page 1</a></li>
        <li><a href="#">Page 2</a></li>
        <li><a href="#">Page 3</a></li>
        <li><a href="#">Page 4</a></li>
        <li><a href="#">Page 5</a></li>
        <li><a href="#">Page 6</a></li>
        <li><a href="#">Page 7</a></li>
        <li><a href="#">Page 8</a></li>
      </ul>



</div>


</div>

<div id="body_content">
<h1>Lesson 1 Page 1</h1>
<p>Building Web pages with HTML is like painting a portrait with a paint
        roller. Only truly determined and tenacious souls can achieve the exact
        result they want. It's just not the right tool for precision and flexibility.
        </p>
      <p>Anyone who's used HTML for more than a week knows it isn't a very effective
        tool for making Web pages. That's why we sometimes resort to making large
        GIFs when we want just the right font or layout. That's why we're forced
        to use convoluted table tags and invisible spacer GIFs to push things
        around on a page. </p>
      <p>It's ridiculous, really. Our code gets too complicated,
          our GIFs too numerous, and our final pages too bandwidth-heavy. It's
          not exactly optimal
          Web page
          construction. </p>
      <p>But in late 1996, stylesheets quietly entered the scene.
        Officially called cascading stylesheets (CSS), it was an elegant cousin
        to HTML that promised: </p>
      <ul>
        <li> more precise control than ever before over layout, fonts, colors,
                backgrounds, and other typographical effects;</li>
        <li> a way to update the appearance and formatting of an unlimited number
              of pages by changing just one document;</li>
        <li> compatibility across browsers
              and platforms; and</li>
        <li>	less code, smaller pages, and faster downloads. </li>
      </ul>      
      <p>Despite lukewarm
        support from many of our favorite Web browsers, CSS is starting to make
        good on these promises. It's transforming the way
        we make
      Web pages and is the cornerstone of Dynamic HTML. </p>
      <p>We'll spend the next
        five lessons taking a tour through the land of stylesheets. You'll learn
        the basics of how to create and use cascading stylesheets
        within your Web pages as well as what's possible with fonts, typography,
      colors, backgrounds, and positioning. </p>
      <p>In Lesson 1, we'll take a quick
        trip through the basics of stylesheets, giving you everything you need
        to get started quickly. Let's begin by
        asking the most important question: What can stylesheets do for me today?        </p>
</div></div>
<div id="footer">&copy;Ian Heath 2012. All Rights Reserved.</div>
</body>
</html>
